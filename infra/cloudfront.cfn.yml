---
AWSTemplateFormatVersion: 2010-09-09


Description: CloudFront

# CloudFront template with one origin and two behaviors. The first behavior
# has path pattern assets/* and aggressive caching settings. The second behavior
# is the default behavior with less aggressive settings.

Parameters:
  OriginDomainName:
    Type: String
    Description: Domain name of origin (e.g. Beanstalk endpoint URL)
    MinLength: 1
    MaxLength: 512

  CustomDomainNames:
    Type: CommaDelimitedList
    Description: Optional custom domain names as a comma-separated string (from e.g. Route 53)

  SSLCertificateArn:
    Description: Optional CloudFront SSL/TLS certificate ARN, must be in us-east-1 region (SSM parameter)
    Type: AWS::SSM::Parameter::Value<String>
    Default: /global/certificates/arn
    MinLength: 0
    MaxLength: 2048
    ConstraintDescription: CloudFront certificates must be in region us-east-1

  OriginProtocolPolicy:
    Type: String
    Description: Protocol policy for communications between CloudFront and the origin
    AllowedValues:
      - http-only
      - match-viewer
      - https-only

Conditions:

  HasCustomCertificate: !Not [ !Equals [ !Ref SSLCertificateArn, "" ] ]

  # True if CustomDomainNames is non-empty, false otherwise
  HasCustomDomains:
    Fn::Not:
      - Fn::Equals:
          - Fn::Join:
              - ""
              - Ref: CustomDomainNames
          - ""

Resources:

  CloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: Default distribution
        Aliases: !If [ HasCustomDomains, !Ref CustomDomainNames, !Ref "AWS::NoValue" ]
        CacheBehaviors:
          - AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            PathPattern: assets/*
            TargetOriginId: !Ref AWS::StackName
            ForwardedValues:
              QueryString: true
              # for SSL-enabled ELB origins
              Headers:
                - Host
              Cookies:
                # none, all, or whitelist
                Forward: none
            TrustedSigners: []
            # allow-all, redirect-to-https, or https-only
            ViewerProtocolPolicy: !If [ HasCustomCertificate, redirect-to-https, allow-all ]
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          TargetOriginId: !Ref AWS::StackName
          ForwardedValues:
            QueryString: true
            Headers:
              - Authorization
              - Host
            Cookies:
              # none, all, or whitelist
              Forward: all
          TrustedSigners: []
          # allow-all, redirect-to-https, or https-only
          ViewerProtocolPolicy: !If [ HasCustomCertificate, redirect-to-https, allow-all ]
        Origins:
          - DomainName: !Ref OriginDomainName
            Id: !Ref AWS::StackName
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              # http-only, match-viewer, or https-only
              OriginProtocolPolicy: !Ref OriginProtocolPolicy
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !If [ HasCustomCertificate, !Ref SSLCertificateArn, !Ref "AWS::NoValue" ]
          CloudFrontDefaultCertificate: !If [ HasCustomCertificate, !Ref "AWS::NoValue", true ]
          SslSupportMethod: !If [ HasCustomCertificate, sni-only, !Ref "AWS::NoValue" ]
      Tags: []

Outputs:

  DistributionID:
    Description: CloudFront Distribution ID
    Value: !Ref CloudFront
    Export:
      Name: !Sub ${AWS::StackName}-DistributionID

  DomainName:
    Description: CloudFront Distribution Domain Name
    Value: !GetAtt CloudFront.DomainName
    Export:
      Name: !Sub ${AWS::StackName}-DomainName
