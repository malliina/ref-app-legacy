AWSTemplateFormatVersion: '2010-09-09'

# Prerequisites: Have your GitHub access token in Secrets Manager with name dev/github/token and key GitHubAccessToken

Description: CodePipeline with Secrets Manager

Parameters:
  CodeBuildEnvironment:
    Type: String
    Description: CodeBuild environment size
    Default: BUILD_GENERAL1_SMALL
    # https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE

  GitHubOwner:
    Type: String
    Description: GitHub owner or user
    Default: malliina
    MinLength: 1
    MaxLength: 256
    AllowedPattern: '[a-zA-Z0-9][-a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

  GitHubRepository:
    Type: String
    Description: GitHub repository
    Default: ref-app
    MinLength: 1
    MaxLength: 256
    AllowedPattern: '[a-zA-Z0-9][-a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

  Branch:
    Type: String
    Description: GitHub branch to build
    MinLength: 1
    MaxLength: 256
    Default: master

  GitHubWebhookSecret:
    NoEcho: true
    Type: String
    Description: Optional GitHub webhook secret for the repo
    MinLength: 0
    MaxLength: 256
    Default: ""

  ApplicationName:
    Type: String
    Description: Beanstalk application name
    MinLength: 1
    MaxLength: 256
    AllowedPattern: '[a-zA-Z0-9][-a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

  BeanstalkEnvironment:
    Type: String
    Description: Beanstalk environment
    MinLength: 1
    MaxLength: 256
    AllowedPattern: '[a-zA-Z0-9][-a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

  BeanstalkPlatform:
    Type: String
    Description: Beanstalk Platform - docker or java
    Default: docker
    AllowedValues:
      - docker
      - java

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Application Source
        Parameters:
          - GitHubOwner
          - GitHubRepository
          - Branch
          - GitHubWebhookSecret
      - Label:
          default: Build Image
        Parameters:
          - CodeBuildEnvironment
      - Label:
          default: Deployment Target
        Parameters:
          - ApplicationName
          - BeanstalkEnvironment
          - BeanstalkPlatform

Conditions:

  WebhookEnabled: !Not [ !Equals [ !Ref GitHubWebhookSecret, "" ] ]
  IsDocker: !Equals [ !Ref BeanstalkPlatform, docker ]

Resources:

  AppCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref AWS::StackName
      Description: Builds the project
      ServiceRole: !Ref CodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: !Ref CodeBuildEnvironment
        Image: 'aws/codebuild/standard:2.0'
      Source:
        BuildSpec: !If [ IsDocker, buildspec.yml, buildspec-java.yml ]
        Type: CODEPIPELINE
      TimeoutInMinutes: 30

  AppPipeline:
    Type: AWS::CodePipeline::Pipeline
    # DependsOn: BeanstalkEnvironment
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
      - Name: Source
        Actions:
        - InputArtifacts: []
          Name: Source
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: '1'
            Provider: GitHub
          OutputArtifacts:
          - Name: MyApp
          Configuration:
            Owner: !Ref GitHubOwner
            Repo: !Ref GitHubRepository
            PollForSourceChanges: !If [ WebhookEnabled, false, true ]
            Branch: !Ref Branch
            # Reads the token from Secrets Manager
            OAuthToken: '{{resolve:secretsmanager:dev/github/token:SecretString:GitHubAccessToken}}'
          RunOrder: 1
      - Name: Build
        Actions:
        - InputArtifacts:
          - Name: MyApp
          Name: CodeBuild
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          Configuration:
            ProjectName: !Ref AppCodeBuild
          OutputArtifacts:
          - Name: MyAppBuild
          RunOrder: 1
      - Name: Staging
        Actions:
        - InputArtifacts:
          - Name: MyAppBuild
          Name: !Ref BeanstalkEnvironment
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: '1'
            Provider: ElasticBeanstalk
          OutputArtifacts: []
          Configuration:
            ApplicationName: !Ref ApplicationName
            EnvironmentName: !Ref BeanstalkEnvironment
          RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreS3Bucket

  Webhook:
    Type: AWS::CodePipeline::Webhook
    Condition: WebhookEnabled
    Properties:
      Name: CodePipelineGitHubWebhook
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubWebhookSecret
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref AppPipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt AppPipeline.Version
      RegisterWithThirdParty: true

  ArtifactStoreS3Bucket:
    Type: AWS::S3::Bucket
    # For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed
    DeletionPolicy: Retain

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/CloudWatchLogsFullAccess'

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess'
        - 'arn:aws:iam::aws:policy/AWSCodePipelineFullAccess'
        - 'arn:aws:iam::aws:policy/AWSElasticBeanstalkFullAccess'
        - 'arn:aws:iam::aws:policy/CloudWatchLogsFullAccess'
